<?xml version="1.0" encoding="UTF-8"?>

<!--

	2018-04-15: m18/r08/scenarios/03.xml
	> profit oriented imitation
	
	2018-04-13: m18/r08/scenarios/02.xml
	Remettre de l'ordre dans le déroulement d'une période
	
	2018-04-13: m18/r07/scenarios/02.01.xml
	Utilise un ménage rentier dont la fonction de consommation est révisée : ne prend en compte que les richesses et revenu monétaires.
	
	2018-04-11: m18/r07/scenarios/02.xml
	
	2018-04-10: m18/r06/scenarios/01.xml
	J'augmente les markups initiaux
	
	2018-04-06: m18/r05/scenarios/01.xml
	Utilise BasicFirm, une firme qui limite la distribution de dividendes et l'investissement quand son endettement est trop élevé.
	
	2018-03-30: m18/r04/scenarios/02.xml
	Le paiement des salaires et des dividendes est repoussé en fin de période.
	Les entreprises s'endettent si elles n'ont pas assez de cash pour payer les dividendes prévus.
	
	2018-03-29: m18/r04/scenarios/01.xml
	Utilise BasicFirm, fusion de l'ancienne BasicFirm et de BasicFirm2
	C'est donc une firme avec une fonction d'investissement Post-Keynésienne.
	La banque utilise une fonction d'ajustement des taux plus lissée.
	Les résultats de scénario sont donc exactement les mêmes que ceux de m18/r03/m18.r03.02.xml 
	
	2018-03-28: m18/r03/m18.r03.02.xml
	Utilise BasicFirm2 (la firme avec une fonction d'investissement Post-Keynésienne.)
	
	2018-03-28: m18/r03/m18.r03.01.xml
	Avec un progrès technologique fonction du temps.
	
	2018-03-17: m18/r03/m18.r03.01.xml
	
	2018-03-17: m18/r02/m18.r02.01.xml
	
	2018-03-10: m18/r01/m18.r01.01.xml
	(from m18/q06/WIP_q06_04.xml)
	Un modèle à deux secteurs, très proche du modèle (à trois secteurs) 
	utilisé dans l'article "What drives markups?" (ICC) 

-->

<!DOCTYPE simulation [
	<!ENTITY model "jamel.models.m18.r08">
	<!ENTITY firm "BasicFirm6">
	<!ENTITY supervision "50">
	<!ENTITY mutation "0.015">
	<!ENTITY debtRatio.target.initialValue.min "0.2">
	<!ENTITY debtRatio.target.initialValue.max "0.8">
	<!ENTITY initial.markup.min "0.4">
	<!ENTITY initial.markup.max "1.">	
	<!ENTITY inventories.normalLevel "3">	
	<!ENTITY term.long "200">	
	<!ENTITY term.short "12">	
	<!ENTITY machines.timeLife.stDev "36">
	<!ENTITY wage.flexibility "0.015">
	<!ENTITY wage.initialValue "500">
	<!ENTITY utilizationRate.initialValue "0.85">
]>

<simulation
	className="&model;.util.BasicSimulation"
	randomSeed="1"
>

	<meta title="A model with 2 industrial sectors">
		<longTitle>
			<h1>A model with 2 industrial sectors</h1>
			<h2>15 April 2018</h2>
		</longTitle>
	</meta>

	<gui
		src="config/panels.xml"
		refresh="1" />

	<sectors defaultClassName="&model;.util.BasicSector">

		<sector
			name="Banks"
			agentClassName="&model;.banks.BasicBank"
			initialPopulation="1"
		>
			<parameters
				supervision="&supervision;"
				capitalTargetRatio="0.1"
				penaltyPremium="0.01"
				taylor.coef="1.5"
				taylor.target="0.02" />
		</sector>

		<sector
			name="ConsumptionGoods"
			className="&model;.firms.BasicTechnology"
		>
			<parameters
				processLenght="6"
				productivity="50"
				machines.creation.input.quality="InvestmentGoods"
				machines.creation.input.volume="4000"
				machines.timeLife.mean="&term.long;"
				machines.timeLife.stDev="&machines.timeLife.stDev;" />
		</sector>
		<sector
			name="InvestmentGoods"
			className="&model;.firms.BasicTechnology"
		>
			<parameters
				processLenght="6"
				productivity="100"
				machines.creation.input.quality="InvestmentGoods"
				machines.creation.input.volume="4000"
				machines.timeLife.mean="&term.long;"
				machines.timeLife.stDev="&machines.timeLife.stDev;" />
		</sector>

		<sector
			name="Sector1"
			agentClassName="&model;.firms.&firm;"
			initialPopulation="200"
			comment="Secteur des biens capitaux"
		>
			<parameters
				initial.markup.min="&initial.markup.min;"
				initial.markup.max="&initial.markup.max;"
				bankSector="Banks"
				supervision="&supervision;"
				credit.term.short="&term.short;"
				credit.term.long="&term.long;"
				inventories.normalLevel="&inventories.normalLevel;"
				mutation.strenght="&mutation;"
				utilizationRate.initialValue="&utilizationRate.initialValue;"
				debtRatio.target.initialValue.min="&debtRatio.target.initialValue.min;"
				debtRatio.target.initialValue.max="&debtRatio.target.initialValue.max;"
				wage.observations="3"
				wage.flexibility="&wage.flexibility;"
				wage.initialValue="&wage.initialValue;"
				shareholders="Shareholders"
				laborMarket="LaborMarket"
			>
				<workforce>
					<jobContracts
						min="6"
						max="36" />
				</workforce>
				<production
					capacity="22"
					quality="InvestmentGoods"
					machines.creation.input.suppliers="Sector1" />
			</parameters>
		</sector>

		<sector
			name="Sector2"
			agentClassName="&model;.firms.&firm;"
			initialPopulation="600"
			comment="Secteur des biens de consommation"
		>
			<parameters
				initial.markup.min="&initial.markup.min;"
				initial.markup.max="&initial.markup.max;"
				bankSector="Banks"
				supervision="&supervision;"
				credit.term.short="&term.short;"
				credit.term.long="&term.long;"
				inventories.normalLevel="&inventories.normalLevel;"
				mutation.strenght="&mutation;"
				utilizationRate.initialValue="&utilizationRate.initialValue;"
				debtRatio.target.initialValue.min="&debtRatio.target.initialValue.min;"
				debtRatio.target.initialValue.max="&debtRatio.target.initialValue.max;"
				wage.observations="3"
				wage.flexibility="&wage.flexibility;"
				wage.initialValue="&wage.initialValue;"
				shareholders="Shareholders"
				laborMarket="LaborMarket"
			>
				<workforce>
					<jobContracts
						min="6"
						max="36" />
				</workforce>
				<production
					capacity="30"
					quality="ConsumptionGoods"
					machines.creation.input.suppliers="Sector1" />
			</parameters>
		</sector>


		<sector
			name="Workers"
			agentClassName="&model;.households.BasicWorker2"
			initialPopulation="20000"
		>
			<parameters
				supervision="&supervision;"
				bankSector="Banks"
			>
				<goodMarket
					suppliers="Sector2"
					quality="ConsumptionGoods"
					savingsPropensityToConsumeExcess="1"
					savingPropensity="0.1"
					savingsRatioTarget="0.85"
					search="10" />
				<laborMarket
					flexibility="0.025"
					resistance="0"
					search="10" />
			</parameters>

		</sector>

		<sector
			name="Shareholders"
			agentClassName="&model;.households.BasicShareholder2"
			initialPopulation="1000"
		>
			<parameters
				supervision="&supervision;"
				bankSector="Banks"
			>
				<goodMarket
					suppliers="Sector2"
					quality="ConsumptionGoods"
					savingsPropensityToConsumeExcess="1"
					savingPropensity="0.8"
					savingsRatioTarget="5"
					search="10" />
			</parameters>
		</sector>

		<sector
			name="LaborMarket"
			className="&model;.markets.BasicLaborMarket"
		>
			<parameters
				employers="Sector1,Sector2"
				workers="Workers" />
		</sector>

		<sector
			name="ConsumerMarket"
			className="&model;.markets.BasicConsumptionGoodMarket"
		>
			<parameters households="Workers,Shareholders" />
		</sector>

		<sector
			name="InvestmentMarket"
			className="&model;.markets.BasicInvestmentGoodMarket"
		>
			<parameters firms="Sector1,Sector2" />
		</sector>
		
		

	</sectors>

	<phases>

		<phase name="planProduction">
			Sector1, Sector2
		</phase>

		<phase
			name="matching"
			shuffle="true"
		>
			LaborMarket
		</phase>

		<phase name="production">
			Sector1, Sector2
		</phase>
		
		<phase
			name="matching"
			shuffle="true"
		>
			InvestmentMarket
		</phase>

		<phase
			name="consumption"
			shuffle="true"
		>
			ConsumerMarket
		</phase>

		<phase name="debtRecovery">
			Banks
		</phase>
		
		<phase name="payDividends">
			Sector1, Sector2, Banks
		</phase>
		
		<phase name="payWages">
			Sector1, Sector2
		</phase>

	</phases>

	<public comment="Ici les informations accessibles publiquement.">
		<data
			name="inflation"
			comment="Le taux d'inflation ainsi calculé est utilisé par la banque pour calculer le taux d'intérêt."
		>
			val(Sector2, salesValue, t, sum) * val(Sector2, salesVolume, t-12, sum)
			/ (val(Sector2, salesVolume, t, sum) * val(Sector2, salesValue, t-12, sum)) - 1
		</data>
		<data
			name="inflation2"
			comment="Le taux d'inflation mensuel."
		>
			val(Sector2, salesValue, t, sum) * val(Sector2, salesVolume, t-1, sum)
			/ (val(Sector2, salesVolume, t, sum) * val(Sector2, salesValue, t-1, sum)) - 1
		</data>
		<!-- Cela pourrait être defini au niveau de la banque, qui enverrait la requête à la simulation. Y penser ! -->
	</public>

	<exports>
		<export>
		</export>
	</exports>

	<events>

		<when t="300">
			<do action="exportCharts" to="period_300/">
				<format width="400" height="200" />
			</do>
			<do action="pause" />
			<do action="beep" />
		</when>
		<when t="2000">
			<do action="exportCharts" to="period_2000/">
				<format width="400" height="200" />
			</do>
			<do action="pause" />
			<do action="beep" />
		</when>

		<!-- Je laisse ça ici pour qu'on voit la syntaxe.
		<when t="3001">
			<do
				action="setVerbose"
				value="true"
				select="name=Firm_167"
				sector="Firms" />
		</when>
		 -->

	</events>

</simulation>
