<?xml version="1.0" encoding="UTF-8"?>

<circuit
	type="jamel.basic.BasicCircuit"
	date="2016-05-09"
	title="Is the market really a good teatcher?"
>

	<settings
		randomSeed="1"
		hasGui="true"
		chartsConfigFile="config/panels.xml" />

	<sectors>

		<Industry
			type="jamel.jamel.firms.BasicIndustrialSector"
			agent="jamel.jamel.firms.BasicFirm"
		>
			<settings
				memory="12"
				mutation.strenght="0.05"
				mutation.probability="0.05"
				investment.greediness="0.2"
				debtRatio.target.initialValue.min="0."
				debtRatio.target.initialValue.max="0.9"
				ownerEquities.maximumShareToBeDistributedAsDividend="0.2"
				credit.term.short="12"
				credit.term.long="120"
				inventories.normalLevel="2"
				inventories.propensity2sell="0.5"
				inventories.depreciation.rate="0.0"
				sales.capacity="2"
				sales.normalRate="1"
				labourContract.max="36"
				labourContract.min="6"
				production.capacity="15"
				utilizationRate.flexibility="0.1"
				utilizationRate.initialValue="0.8"
				price.flexibility="0.04"
				vacancy.normalRate="0.03"
				wage.initialValue="50"
				wage.flexibility="0.02"
				wage.observations="3"
				wage.minimum="0" />

			<dependencies>
				<CapitalistSector value="Households" />
				<Banks value="Banks" />
				<Suppliers
					sector="Industry"
					supply="Basic Goods" />
			</dependencies>

			<technology
				machine.creation.input.type="Basic Goods"
				machine.creation.input.volume="500"
				machine.timelife.mean="120"
				machine.timelife.stDev="15"
				production.productivity="100"
				production.type="Basic Goods"
				production.time="4"
			>
			</technology>
		</Industry>

		<Households
			type="jamel.jamel.households.BasicHouseholdSector"
			agent="jamel.jamel.households.BasicHousehold"
		>
			<settings
				wage.resistance="12"
				wage.flexibility="0.05"
				savings.propensityToSave="0.2"
				savings.ratioTarget="0.2"
				savings.propensityToConsumeExcess="0.5"
				jobs.selection="10"
				supplies.selection="10" />
			<dependencies>
				<Suppliers
					value="Industry"
					good="Basic Goods" />
				<Employers value="Industry" />
				<Banks value="Banks" />
			</dependencies>
		</Households>

		<Banks type="jamel.jamel.banks.BasicBankingSector">
			<settings
				taylorRule.coef="2"
				taylorRule.target="0.02"
				capital.targetedRatio="0.1"
				capital.propensityToDistributeExcess="1."
				penalty.premium="0.04"
				recapitalization.debtRatio.target="0.8"
				patience="12"
				accommodating="0" />
			<dependencies>
				<CapitalistSector value="Households" />
			</dependencies>
		</Banks>

	</sectors>

	<phases>
		<Banks action="opening" />
		<Industry action="opening" />
		<Households action="opening" />
		<Banks action="pay_dividend" />
		<Industry action="pay_dividend" />
		<Households action="take_dividends" />
		<Industry action="plan_production" />
		<Households action="job_search" />
		<Industry action="production" />
		<Industry action="investment" />
		<Households action="consumption" />
		<Banks action="debt_recovery" />
		<Banks action="closure" />
		<Industry action="closure" />
		<Households action="closure" />
	</phases>
	<queries>
		<inflation
			value="
				(sum ( Industry , sales.val , t-1 ) 
				* sum ( Industry , sales.vol , t-13 ) 
				: ( sum ( Industry , sales.vol , t-1 ) 
				* sum ( Industry , sales.val , t-13 ) ) 
				-1)" />
	</queries>

	<events>

		<pause period="0" />
		<Households
			period="0"
			event="Create new households"
			size="6000" />

		<Industry
			period="0"
			event="Create new firms"
			size="400" />
		<marker
			period="100"
			marker="100" />
		<pause period="3000" />

	</events>

	<exports>

		<comment>
			Ici, on décrit les données qui doivent être exportées au
			cours de la simulation. Les données sont exportées dans des fichiers
			de type texte.

			Les données sont exportées sous la forme de tableaux.
			Les colonnes du tableau sont séparée par un caratère spécial spécifié
			par l'attribut 'separator'.

			Si 'data.type="individual"', alors les
			données exportées sont les données individuelles de chacun des agents
			sélectionnés (données en colonnes, une ligne par agent).

			Si
			'data.type="aggregate"', alors les
			données
			exportées sont des données
			agrégées au niveau du secteur
			(données en
			colonne, une ligne par
			période).

		</comment>
		<export
			file="charts2/data/bank_rates.txt"
			when="1-3000"
			each="12"
			separator=" "
			numberFormat="###.####"
			data.type="aggregate"
		>
			<data
				name="t"
				value="time()" />
			<data
				name="r.nominal"
				value="sum ( Banks , rate.normal.nominal , t-11...t )" />
			<data
				name="r.real"
				value="sum ( Banks , rate.normal.real , t-11...t )" />
			<data
				name="priceInflation"
				value="
					sum ( Industry , sales.val , t ) 
					* sum ( Industry , sales.vol , t-12 ) 
					: ( sum ( Industry , sales.vol , t ) 
					* sum ( Industry , sales.val , t-12 ) )
					-1" />
			<data
				name="wageInflation"
				value="
					( sum ( Households , wages , t-11...t ) 
					* sum ( Households , employed , t-23...t-12 ) ) 
					: ( sum ( Households , employed , t-11...t ) 
					* sum ( Households , wages , t-23...t-12 ) ) 
					- 1" />
		</export>
		<export
			file="charts2/data/investment.txt"
			when="1-3000"
			each="12"
			separator=" "
			numberFormat="###.####"
			data.type="aggregate"
		>
			<data
				name="t"
				value="time()" />
			<data
				name="netInvestment"
				value="sum ( Industry , netInvestment , t-11...t )" />
			<data
				name="grossFixedCapitalFormation"
				value="sum ( Industry , investment.val , t-11...t )" />
			<data
				name="grossInvestment2GDP"
				value="
					(
					sum ( Industry , netInvestment , t-11...t )
					+ sum ( Industry , fixedCapital.depreciation , t-11...t )				
					)
					: sum ( Households , income , t-11...t )
					" />
			<data
				name="netInvestment2GDP"
				value="
					sum ( Industry , netInvestment , t-11...t )
					: sum ( Households , income , t-11...t )
					" />
			<data
				name="grossFixedCapitalFormation2GDP"
				value="
					sum ( Industry , investment.val , t-11...t )
					: sum ( Households , income , t-11...t )
					" />
		</export>
		<export
			file="charts2/data/markup.txt"
			when="1-3000"
			each="12"
			separator=" "
			numberFormat="###.####"
			data.type="aggregate"
		>
			<data
				name="t"
				value="time()" />
			<data
				name="grossProfit"
				value="sum ( Industry , grossProfit , t-11...t )" />
			<data
				name="sales.cost"
				value="
					sum ( Industry , sales.cost , t-11...t )" />
			<data
				name="markup"
				value="
					1 + sum ( Industry , grossProfit , t-11...t ) 
					: sum ( Industry , sales.cost , t-11...t ) " />
		</export>
		<export
			file="charts2/data/inventories.txt"
			when="1-3000"
			each="12"
			separator=" "
			numberFormat="###.####"
			data.type="aggregate"
		>
			<data
				name="t"
				value="time()" />
			<data
				name="effective"
				value="
					sum ( Industry , inventories.fg.vol , t-11...t ) : 12" />
			<data
				name="target"
				value="
					sum ( Industry , inventories.fg.vol.normal , t-11...t ) : 12" />
			<data
				name="inventoryRatio"
				value="
					sum ( Industry , inventories.fg.vol , t-11...t )
					:
					sum ( Industry , inventories.fg.vol.normal , t-11...t )
					" />
		</export>
		<export
			file="charts2/data/debt.txt"
			when="1-3000"
			each="12"
			separator=" "
			numberFormat="###.####"
			data.type="aggregate"
		>
			<data
				name="t"
				value="time()" />
			<data
				name="l.target.average"
				value="
					sum ( Industry , targetDebtRatio , t-11...t ) 
					: sum ( Industry , firms , t-11...t )
					" />
			<data
				name="l.target.weightened"
				value="
					sum ( Industry , liabilities.target , t-11...t ) 
					: sum ( Industry , assets , t-11...t )
					" />
			<data
				name="l.effective"
				value="
					sum ( Industry , liabilities , t-11...t ) 
					: sum ( Industry , assets , t-11...t )
					" />
			<data
				name="debt.service.coverage.ratio"
				value="
					(
					sum ( Industry , grossProfit , t-11...t )
					- sum ( Industry , fixedCapital.depreciation , t-11...t )
					)
					:
					sum ( Industry , debt.repaid , t-11...t )" />
			<data
				name="financial.fragility"
				value="
					sum ( Industry , liabilities , t-11...t )
					: ( 12 * 
					( sum ( Industry , grossProfit , t-11...t )
					- sum ( Industry , interest , t-11...t ) )
					) 
					" />
			<data
				name="bankruptcy.rate"
				value="
					12 * sum ( Industry , management.change , t-11...t ) 
					: sum ( Industry , firms , t-11...t ) 
					" />
			<data
				name="circulating.capital"
				value=" ( sum ( Industry , inventories.inProcess.val , t-11...t ) +
						sum ( Industry , inventories.fg.val , t-11...t ) ) *
						sum ( Industry , inventories.fg.vol , t-11...t ) :
						sum ( Industry , inventories.fg.val , t-11...t ) " />
			<data
				name="short.term.loans"
				value="sum ( Banks , loans.shortTerm , t-11...t ) *
						sum ( Industry , inventories.fg.vol , t-11...t ) :
						sum ( Industry , inventories.fg.val , t-11...t ) " />
			<data
				name="fixed.capital"
				value="sum ( Industry , machinery.val , t-11...t ) :
						mean ( Industry , prices , t-11...t ) " />
			<data
				name="long.term.loans"
				value="sum ( Banks , loans.longTerm , t-11...t ) :
						mean ( Industry , prices , t-11...t ) " />
		</export>
		<export
			file="charts2/data/labourMarket.txt"
			when="1-3000"
			each="12"
			separator=" "
			numberFormat="###.####"
			data.type="aggregate"
		>
			<data
				name="t"
				value="time()" />
			<data
				name="inflation"
				value="
					( sum ( Households , wages , t-11...t ) 
					* sum ( Households , employed , t-23...t-12 ) ) 
					: ( sum ( Households , employed , t-11...t ) 
					* sum ( Households , wages , t-23...t-12 ) ) 
					- 1" />
			<data
				name="unemployment"
				value="
					sum ( Households , unemployed , t-11...t ) 
					: sum ( Households , agents , t-11...t )" />
			<data
				name="vacancies"
				value="
					sum ( Industry , jobVacancies , t-11...t ) 
					: sum ( Industry , workforceTarget , t-11...t ) " />
			<data
				name="labour.demand"
				value="
					sum ( Industry , workforceTarget , t-11...t ) 
					: 12" />
			<data
				name="capacity"
				value="
					sum ( Industry , capacity , t-11...t ) 
					: 12" />
			<data
				name="labour.supply"
				value="
					sum ( Households , agents , t-11...t ) 
					: 12" />
		</export>
		<export
			file="charts2/data/income.txt"
			when="1-3000"
			each="12"
			separator=" "
			numberFormat="###.####"
			data.type="aggregate"
		>
			<data
				name="t"
				value="time()" />
			<data
				name="profits"
				value="sum ( Households , profits , t-11...t )" />
			<data
				name="wages"
				value="sum ( Households , wages , t-11...t )" />
			<data
				name="profitShare"
				value="
					sum ( Households , profits , t-11...t )
					: 
					sum ( Households , income , t-11...t )
					" />
			<data
				name="wageShare"
				value="
					sum ( Households , wages , t-11...t )
					: 
					sum ( Households , income , t-11...t )
					" />
		</export>
		<export
			file="charts2/data/goodwin.txt"
			when="1-3000"
			each="12"
			separator=" "
			numberFormat="###.####"
			data.type="aggregate"
		>
			<data
				name="t"
				value="time()" />
			<data
				name="profits"
				value="sum ( Industry , grossProfit , t-11...t ) 
					- sum ( Industry , fixedCapital.depreciation , t-11...t )" />
			<data
				name="wages"
				value="sum ( Households , wages , t-11...t )" />
			<data
				name="wageShare"
				value="
				sum ( Households , wages , t-11...t )
				:
				sum ( Households , income , t-11...t )
				" />
			<data
				name="employment"
				value="sum ( Households , employed , t-11...t ) 
				: sum ( Households , agents , t-11...t )" />
		</export>
		<export
			file="charts2/data/production.txt"
			when="1-3000"
			each="12"
			separator=" "
			numberFormat="###.####"
			data.type="aggregate"
		>
			<data
				name="t"
				value="time()" />
			<data
				name="capacity"
				value="
					sum ( Industry , capacity , t-11...t ) 
					: 12" />
			<data
				value="sum ( Industry , production.vol , t-11...t )"
				name="output.vol" />
			<data
				value="sum ( Households , consumption.vol , t-11...t )"
				name="consumption.vol" />
			<data
				value="
					sum ( Industry , investment.vol , t-11...t )
					+ sum ( Industry , inventories.fg.vol , t )
					- sum  ( Industry , inventories.fg.vol , t-12 )
					"
				name="investment.vol" />
			<data
				value="
					sum ( Industry , production.vol , t-11...t )
					- sum ( Households , consumption.vol , t-11...t )
					"
				name="investment.vol.verification" />
			<data
				value="sum ( Industry , production.vol.atFullCapacity , t-11...t )"
				name="output.potential.vol" />
			<data
				value="
					sum ( Industry , production.vol.atFullCapacity , t-11...t )
					: sum ( Industry , production.vol.atFullCapacity , t-23...t-12 )
					-1
				 	"
				name="output.potential.growth" />
			<data
				value="
					sum ( Industry , production.vol , t-11...t )
					: sum ( Industry , production.vol , t-23...t-12 )
					-1
				 	"
				name="output.growth" />
			<data
				value="
					(sum ( Industry , production.vol , t-11...t )
					- sum ( Households , consumption.vol , t-11...t ))
					: (sum ( Industry , production.vol , t-23...t-12 )
					- sum ( Households , consumption.vol , t-23...t-12 ))
					-1
					"
				name="investment.growth" />
			<data
				value="
					sum ( Households , consumption.vol , t-11...t )
					: sum ( Households , consumption.vol , t-23...t-12 )
					-1
					"
				name="consumption.growth" />
			<data
				name="financial.fragility"
				value="
					sum ( Industry , liabilities , t-11...t )
					: ( 12 * 
					( sum ( Industry , grossProfit , t-11...t )
					- sum ( Industry , interest , t-11...t ) )
					) 
					" />
		</export>
		<export
			file="charts2/data/production2.txt"
			when="1-3000"
			each="12"
			separator=" "
			numberFormat="###.####"
			data.type="aggregate"
		>
			<data
				name="t"
				value="time()" />
			<data
				name="capacity"
				value="
					sum ( Industry , capacity , t-11...t ) 
					: 12" />
			<data
				value="sum ( Industry , production.vol , t-11...t )"
				name="output.vol" />
			<data
				value="sum ( Households , consumption.vol , t-11...t )"
				name="consumption.vol" />
			<data
				value="
					sum ( Industry , investment.vol , t-11...t )
					+ sum ( Industry , inventories.fg.vol , t )
					- sum  ( Industry , inventories.fg.vol , t-12 )
					"
				name="investment.vol" />
			<data
				value="
					sum ( Industry , production.vol , t-11...t )
					- sum ( Households , consumption.vol , t-11...t )
					"
				name="investment.vol.verification" />
			<data
				value="sum ( Industry , production.vol.atFullCapacity , t-11...t )"
				name="output.potential.vol" />
			<data
				value="
					sum ( Industry , production.vol.atFullCapacity , t-11...t )
					: sum ( Industry , production.vol.atFullCapacity , t-23...t-12 )
					-1
				 	"
				name="output.potential.growth" />
			<data
				value="
					sum ( Industry , production.vol , t-11...t )
					: sum ( Industry , production.vol , t-23...t-12 )
					-1
				 	"
				name="output.growth" />
			<data
				name="financial.fragility"
				value="
					sum ( Industry , liabilities , t-11...t )
					: ( 12 * 
					( sum ( Industry , grossProfit , t-11...t )
					- sum ( Industry , interest , t-11...t ) )
					) 
					" />
		</export>
	</exports>

</circuit>
