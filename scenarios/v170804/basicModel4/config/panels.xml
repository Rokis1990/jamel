<?xml version="1.0" encoding="UTF-8"?>

<!-- 18 août 2017 -->

<!DOCTYPE gui [
	<!ENTITY refresh "isEqual(t&#37;1, 0)"> 
	<!ENTITY laps "t"> 
	<!ENTITY aFirm "Firm_797"> 
	<!ENTITY aWorker "Worker_0">
]>

<gui className="jamel.v170804.gui.BasicGui">

	

	<panel title="Main">

		<chart title="Costs and Prices">
			<if>&refresh;</if>
			<series
				label="Unit Cost"
				color="red"
			>
				<x>t</x>
				<y>
					val(Firms, supplyCost, &laps;,
					sum) / val(Firms, supplyVolume,
					&laps;,
					sum)
				</y>
			</series>
			<series
				label="Unit Price"
				color="blue"
			>
				<x>t</x>
				<y>
					val(Firms, supplyValue, &laps;,
					sum) / val(Firms, supplyVolume,
					&laps;,
					sum)
				</y>
			</series>
			<yAxis label="Value" />

		</chart>

		<chart title="Phillips Curve">

			<if>isEqual(t%12, 0)</if>

			<series label="Phillips" color="red" shapesVisible="true" lineColor="gray">
				<x>100 * (1-(val(Workers, employed, t, sum)) / val(Workers, count, t, sum))</x>
				<y>100 * (val(Firms, supplyValue, t, sum) * val(Firms, supplyVolume, t-12, sum) / (val(Firms, supplyValue, t-12, sum) * val(Firms, supplyVolume, t, sum)) -1)</y>
			</series>
			<xAxis label="Unemployment (%)" />
			<yAxis label="Inflation (%)" />

		</chart>

		<chart title="Beveridge Curve">

			<if>isEqual(t%12, 0)</if>

			<series label="Beveridge" color="green" shapesVisible="true" lineColor="gray">
				<x>100 * (1-val(Workers, employed, t, sum) / val(Workers, count, t, sum))</x>
				<y>100 * val(Firms, vacancies, t, sum) / val(Firms, capacity, t, sum)</y>
			</series>
			<xAxis label="Unemployment (%)" />
			<yAxis label="Vacancies (%)" />

		</chart>
		
		<col />

		<chart title="Firms Balance Sheet">
		
			<if>&refresh;</if>
			<series
				label="Tangible assets"
				color="red"
			>
				<x>t</x>
				<y>val(Firms, tangibleAssets, t, sum)</y>
			</series>
			<series
				label="Money"
				color="blue"
			>
				<x>t</x>
				<y>val(Firms, money, t, sum)</y>
			</series>
			<series
				label="Liabilities"
				color="green"
			>
				<x>t</x>
				<y>val(Firms, liabilities, t, sum)</y>
			</series>
			<yAxis label="Value" />
		</chart>

		<chart title="Firms Debt Ratio">

			<if>&refresh;</if>

			<series label="Average" color="red" >
				<x>t</x>
				<y>100 * val(Firms, liabilities, t, sum) / val(Firms, assets, t, sum)</y>
			</series>

			<series label="Min" color="pink">
				<x>t</x>
				<y>100 * val(Firms, debtRatio, t, min)</y>
			</series>

			<series	label="Max" color="pink">
				<x>t</x>
				<y>100 * val(Firms, debtRatio, t, max)</y>
			</series>

		<yAxis label="%" />

		</chart>

		<chart title="Goods Market 1">

			<if>&refresh;</if>

			<series
				label="Supply"
				color="red"
			>
				<x>t</x>
				<y>val(Firms,
					supplyValue, &laps;,
					sum)
				</y>
			</series>

			<series
				label="Demand"
				color="blue"
			>
				<x>t</x>
				<y>
					val(Workers, consumptionBudget, &laps;,
					sum)
					+ val(Shareholders,
					consumptionBudget, &laps;,
					sum)
				</y>
			</series>

			<yAxis label="Value" />

		</chart>

		<col />

		<chart title="Banks Balance Sheet">

			<if>&refresh;</if>

			<series
				label="Assets"
				color="blue"
			>
				<x>t</x>
				<y>val(Banks, assets, t, sum)</y>
			</series>

			<series
				label="liabilities"
				color="red"
			>
				<x>t</x>
				<y>val(Banks, liabilities, t, sum)</y>
			</series>

			<yAxis label="Value" />

		</chart>

		<chart title="Goods Market 2">

			<if>&refresh;</if>

			<series
				label="Production"
				color="red"
			>
				<x>t</x>
				<y>val(Firms,
					productionVolume, &laps;,
					sum)
				</y>
			</series>

			<series
				label="Sales"
				color="blue"
			>
				<x>t</x>
				<y>val(Firms,
					salesVolume, &laps;,
					sum)
				</y>
			</series>

			<series
				label="Consumption"
				color="green"
			>
				<x>t</x>
				<y>val(Workers,
					consumptionVolume, &laps;,
					sum)
					+ val(Shareholders,
					consumptionVolume, &laps;,
					sum)
				</y>
			</series>

			<yAxis label="Volume" />

		</chart>

		<chart title="Goods Market 3">

			<if>&refresh;</if>

			<series
				label="Supply"
				color="red"
			>
				<x>t</x>
				<y>val(Firms,
					supplyVolume, &laps;,
					sum)
				</y>
			</series>

			<series
				label="demand"
				color="blue"
			>
				<x>t</x>
				<y>
					(val(Workers, consumptionBudget, &laps;,
					sum) +
					val(Shareholders, consumptionBudget, &laps;,
					sum)) *
					val(Firms,supplyVolume,&laps;,
					sum) /
					val(Firms,supplyValue,&laps;,
					sum)
				</y>

			</series>

			<yAxis label="Volume" />

		</chart>

	</panel>

	<panel title="Bank">

		<chart title="Deposits">
			<if>&refresh;</if>
			<series label="Firms" color="red">
				<x>t</x>
				<y>val(Firms, money, t, sum)</y>
			</series>
			<series label="Workers" color="blue">
				<x>t</x>
				<y>val(Workers, money, t, sum)</y>
			</series>
			<series label="Shareholders" color="green">
				<x>t</x>
				<y>val(Shareholders, money, t, sum)</y>
			</series>
			<yAxis label="Value" />
		</chart><empty />

		<empty /><col /><chart title="Bad debt">

			<if>&refresh;</if>

			<series label="Insolvent firms" color="red">
				<x>t</x>
				<y>100 * (1 - val(Firms, solvent, t, sum) / val(Firms, count, t, sum))</y>
			</series>
			
			<series label="Bad debtors" color="blue">
				<x>t</x>
				<y>100 * (1 - val(Firms, isBadDebtor, t, sum) / val(Firms, count, t, sum))</y>
			</series>

			<yAxis label="%" min="0" max="100" />

		</chart>

		<empty />
		<empty />

		<col />

		<chart title="Bank Balance Sheet">

			<if>&refresh;</if>

			<series
				label="Assets"
				color="blue"
			>
				<x>t</x>
				<y>val(Banks, assets, t, sum)</y>
			</series>

			<series
				label="liabilities"
				color="red"
			>
				<x>t</x>
				<y>val(Banks, liabilities, t, sum)</y>
			</series>

			<yAxis label="Value" />

		</chart>

		<chart title="Finacial ratios">

			<if>&refresh;</if>

			<series
				label="Capital adequacy ratio"
				color="blue"
			>
				<x>t</x>
				<y>100*(1-val(Banks, liabilities, t, sum)/val(Banks, assets, t,
					sum))</y>
			</series>

			<series
				label="Overdue debts"
				color="red"
			>
				<x>t</x>
				<y>100*val(Banks, overdueDebt, t, sum)/val(Banks, assets, t, sum)</y>
			</series>

			<yAxis label="%" />

		</chart>

		<chart title="Interests">

			<if>&refresh;</if>

			<series
				label="Average interest rate"
				color="blue"
			>
				<x>t</x>
				<y>100*(val(Banks, interests, t, sum) / val(Banks, liabilities, t,
					sum))</y>
			</series>

			<yAxis label="%" />

		</chart>

	</panel>

	<panel title="Labor Market">
		<chart title="Employment">
			<series
				label="#Workers"
				color="green"
			>
				<x>t</x>
				<y>val(Workers, count, t, sum)</y>
				<color>green</color>
			</series>
			<series
				label="#Employed"
				color="blue"
			>
				<x>t</x>
				<y>val(Workers, employed, t, sum)</y>
			</series>
			<xAxis label="Time" />
		</chart>
		<chart title="Job offers">
			<series color="red">
				<x>t</x>
				<y>val(Firms, jobOffers, t, sum)</y>
			</series>
			<xAxis label="Time" />
		</chart>

		<empty />
		<col />
		<empty />

		<col />
		<empty />

	</panel>

	<panel title="Workers">

		<html title="Presentation">
			Les "Workers" sont une des deux catégories de ménages
			du modèle.
		</html>

		<chart title="Deposits">
			<if>&refresh;</if>
			<series
				label="Workers"
				color="green"
			>
				<x>t</x>
				<y>val(Workers, money, t, sum)</y>
			</series>
			<yAxis label="Value" />
		</chart>
		<empty />
		<col />

		<chart title="Consumption">
			<if>&refresh;</if>
			<series
				label="Budget"
				color="red"
			>
				<x>t</x>
				<y>val(Workers,
					consumptionBudget, &laps;,
					sum)
				</y>
			</series>

			<series
				label="Consumption"
				color="blue"
			>
				<x>t</x>
				<y>val(Workers,
					consumptionValue, &laps;,
					sum)
				</y>
			</series>

			<yAxis label="Value" />

		</chart>

		<empty />
		<empty />
		<col /><chart title="Wage">
			<series label="Average" color="blue">
				<x>t</x>
				<y>val(Workers, wage, t, sum) / val(Workers, employed, t, sum)</y>
			</series>
			<series label="Min" color="veryLightBlue">
				<x>t</x>
				<y>val(Workers, wage, t, min)</y>
			</series>
			<series label="Max" color="veryLightBlue">
				<x>t</x>
				<y>val(Workers, wage, t, max)</y>
			</series>
		</chart>
		<empty /><empty />

	</panel>

	<panel title="Shareholders">
		<html title="Presentation">
			Les "Shareholders" sont une des deux catégories de
			ménages du modèle.
		</html>

		<chart title="Deposits">
			<if>&refresh;</if>
			<series
				label="Shareholders"
				color="green"
			>
				<x>t</x>
				<y>val(Shareholders,
					money, &laps;,
					sum)
				</y>
			</series>
			<yAxis label="Value" />
		</chart>
		<empty />
		<col />

		<chart title="Consumption">
			<if>&refresh;</if>

			<series
				label="Budget"
				color="red"
			>
				<x>t</x>
				<y>val(Shareholders,
					consumptionBudget, &laps;,
					sum)
				</y>
			</series>

			<series
				label="Consumption"
				color="blue"
			>
				<x>t</x>
				<y>val(Shareholders,
					consumptionValue, &laps;,
					sum)
				</y>
			</series>

			<yAxis label="Value" />

		</chart>

		<empty />

		<chart title="Supply and demand">
			<series
				label="Demand"
				color="blue"
			>
				<x>t</x>
				<y>val(Shareholders,
					consumptionBudget, &laps;,
					sum)
				</y>
			</series>
			<series
				label="Consumption"
				color="green"
			>
				<x>t</x>
				<y>val(Shareholders,
					consumptionValue, &laps;,
					sum)
				</y>
			</series>
			<yAxis label="Value" />
		</chart>

		<col />

		<empty />

	</panel>

	<panel title="Firms">
		<html title="Monitoring the firms">
			Les "Firms" produisent un bien unique, qui est un bien de
			consommation.
			<br />
			<br />
			Period:
			<data format="##0">t</data>
			<br />
			Workforce:
			<data format="##0">val(Firms, workforce, t, sum)</data>
			<br />
			Capacity:
			<data format="##0">val(Firms, capacity, t, sum)</data>
			<br />
			Normal rate of utilization:
			<data format="0.##">Firms.utilization.normalRate</data>
			<br />
		</html>

		<chart title="Deposits">
			<if>&refresh;</if>
			<series
				label="Firms"
				color="green"
			>
				<x>t</x>
				<y>val(Firms, money, t, sum)</y>
			</series>
			<yAxis label="Value" />
		</chart>

		<chart title="Inventories">
			<if>&refresh;</if>
			<series
				label="Firms"
				color="green"
			>
				<x>t</x>
				<y>val(Firms, inventoriesVolume, t, sum)</y>
			</series>
			<yAxis label="Volume" />

		</chart><empty />

		<col />

		<chart title="Markups">
			<if>&refresh;</if>

			<series
				label="Average Markup"
				color="red"
			>
				<x>t</x>
				<y>val(Firms, markup, t, sum) / val(Firms, count, t, sum)</y>
			</series>

			<series
				label="Min"
				color="pink"
			>
				<x>t</x>
				<y>val(Firms, markup, t, min)</y>
			</series>

			<series
				label="Max"
				color="pink"
			>
				<x>t</x>
				<y>val(Firms, markup, t, max)</y>
			</series>

			<series
				label="Ex post Markup"
				color="blue"
			>
				<x>t</x>
				<y>val(Firms, salesValue, t, sum) / val(Firms, salesCosts, t, sum)</y>
			</series>

			<yAxis label="%" />

		</chart>

		<chart title="Inventories">
			<if>&refresh;</if>
			<series
				label="Effective"
				color="red"
			>
				<x>t</x>
				<y>val(Firms, inventoriesVolume, t, sum) / val(Firms, count, t, sum)</y>
			</series>
			<series
				label="Normal"
				color="green"
			>
				<x>t</x>
				<y>val(Firms, inventoriesNormalVolume, t, sum) / val(Firms, count,
					t, sum)
				</y>
			</series>
			<yAxis label="Volume" />

		</chart>

		<chart title="Wages">
			<series label="Average" color="blue">
				<x>t</x>
				<y>val(Firms, wageBill, t, sum) / val(Firms, workforce, t, sum)</y>
			</series>
			<series label="Min" color="veryLightBlue">
				<x>t</x>
				<y>val(Firms, wage, t, min)</y>
			</series>
			<series label="Max" color="veryLightBlue">
				<x>t</x>
				<y>val(Firms, wage, t, max)</y>
			</series>
		</chart>
		
		<empty/>
		
		<col />
		
		<chart title="Capacity Utilization">
			<if>&refresh;</if>
			<series
				label="Effective"
				color="red"
			>
				<x>t</x>
				<y>val(Firms, workforce, t, sum) / val(Firms, capacity, t, sum)
				</y>
			</series>
			<series
				label="Normal"
				color="green"
			>
				<x>t</x>
				<y>Firms.utilization.normalRate</y>
			</series>
			<yAxis label="%" />

		</chart>
		
		<chart title="Prices">
		
			<series label="Average" color="blue">
				<x>t</x>
				<y>val(Firms, salesValue, t, sum) / val(Firms, salesVolume, t, sum)</y>
			</series>
			
			<series label="Min" color="veryLightBlue">
				<x>t</x>
				<y>val(Firms, price, t, min)</y>
			</series>
			
			<series label="Max" color="veryLightBlue">
				<x>t</x>
				<y>val(Firms, price, t, max)</y>
			</series>
			
		</chart>



		<chart title="Price changes">
			<if>&refresh;</if>
			<series
				label="Price updates / #Firms"
				color="red"
			>
				<x>t</x>
				<y>val(Firms,
					changePrice, &laps;,
					sum) / val(Firms, count, &laps;,
					sum)
				</y>
			</series>
			<yAxis label="%" />

		</chart>

		<chart title="Profits">

			<if>&refresh;</if>

			<series label="Gross profit">
				<x>t</x>
				<y>val(Firms, salesValue, t, sum) - val(Firms, salesCosts, t, sum)</y>
			</series>

			<series label="Dividends">
				<x>t</x>
				<y>val(Firms, dividends, t, sum)</y>
			</series>

			<series label="Debt service">
				<x>t</x>
				<y>val(Firms, debtService, t, sum)</y>
			</series>

			<series
				label="Interests"
				color="orange"
			>
				<x>t</x>
				<y>val(Firms, interests, t, sum)</y>
			</series>

			<yAxis label="Value" />

		</chart><col /><empty />

	</panel>

	<panel title="&aFirm;">

		<html>
			The behavior of any individual agent can be monitored
			(here, the firm
			<i>&aFirm;
			</i>
			).
			<br />
			<br />
			Period:
			<data format="##0">t</data>
			<br />
			&aFirm;
			price:
			<data format="##0.##">val(Firms.firm_0, price, t)</data>
			<br />
			Sector average price:
			<data format="##0.##">val(Firms, price, t, sum)/val(Firms, count, t, sum)</data>
			<br />
			Sector average (ex post) markup:
			<data format="##0.##">val(Firms, salesValue, t, sum)/val(Firms,
				salesCosts, t, sum)</data>
			<br />
			Sector average wage:
			<data format="##0.##">val(Workers, wage, t, sum)/val(Workers, count, t,
				sum)</data>
			<br />
			wage:
			<data format="##0.##">val(Firms.&aFirm;,
				wage, t)
			</data>
			<br />
			&aFirm;
			inventoriesNormalVolume:
			<data format="##0.##">val(Firms.&aFirm;,
				inventoriesNormalVolume, t)
			</data>
			<br />
			&aFirm;
			inventoriesVolume:
			<data format="##0.##">val(Firms.&aFirm;,
				inventoriesVolume, t)
			</data>
			<br />
			&aFirm;
			inventoryDesequilibria:
			<data format="##0.##">val(Firms.&aFirm;,
				inventoryDesequilibria, t)
			</data>
			<br />
		</html>

		<chart title="Price">
			<series label="&aFirm;">
				<x>t</x>
				<y>val(Firms.&aFirm;,
					price, t)
				</y>
			</series>
			<series label="Sector Average">
				<x>t</x>
				<y>val(Firms, supplyValue, t, sum)/val(Firms, supplyVolume, t, sum)</y>
			</series>
		</chart>
		
		<chart title="Markup">
			<if>&refresh;</if>

			<series label="&aFirm;" color="blue">
				<x>t</x>
				<y>val(Firms.&aFirm;, markup, t)</y>
			</series>

			<series label="Sector Average" color="red">
				<x>t</x>
				<y>val(Firms, markup, t, sum)/val(Firms, count, t, sum)</y>
			</series>

			<series label="Min" color="pink">
				<x>t</x>
				<y>val(Firms, markup, t, min)</y>
			</series>

			<series label="Max" color="pink">
				<x>t</x>
				<y>val(Firms, markup, t, max)</y>
			</series>

			<yAxis label="" />

		</chart>
		
		<chart title="Insolvencies">

			<if>&refresh;</if>

			<series label="Insolvencies" color="red">
				<x>t</x>
				<y>1- val(Firms.&aFirm;, solvent, t)</y>
			</series>
						
			<yAxis label=" " min="0" max="1.2" />
				
		</chart>
		
		<col />

		<chart title="Wage">
			<series label="&aFirm;">
				<x>t</x>
				<y>val(Firms.&aFirm;,
					wage, t)
				</y>
			</series>
			<series label="Sector Average">
				<x>t</x>
				<y>val(Workers, wage, t, sum) / val(Workers, employed, t, sum)</y>
			</series>
		</chart>

		<chart title="Vacancies">

			<series label="Vacancy rate">
				<x>t</x>
				<y>val(Firms.&aFirm;,
					vacancies, t) / val(Firms.&aFirm;,
					capacity, t)
				</y>
			</series>
			<series label="Relative wage">
				<x>t</x>
				<y>val(Workers,
					employed, t, sum) * val(Firms.&aFirm;,
					wage, t) / val(Workers, wage, t, sum) - 0.8
				</y>
			</series>

		</chart>

		<chart title="Vacancies 2">

			<series label="Vacancy rate">
				<x>t</x>
				<y>val(Firms.&aFirm;,
					vacancies, t) / val(Firms.&aFirm;,
					jobOffers, t)
				</y>
			</series>
			<series label="Relative wage">
				<x>t</x>
				<y>val(Workers,
					employed, t, sum) * val(Firms.&aFirm;,
					wage, t) / val(Workers, wage, t, sum) - 0.8
				</y>
			</series>

		</chart>

		<empty/>

		<col />

		<chart title="Production">

			<if>&refresh;</if>

			<series
				label="Average"
				color="red"
			>
				<x>t</x>
				<y>
					(val(Firms.&aFirm;,
					productionVolume, t) +
					val(Firms.&aFirm;,
					productionVolume, t-1) +
					val(Firms.&aFirm;,
					productionVolume, t-2) +
					val(Firms.&aFirm;,
					productionVolume, t-3) +
					val(Firms.&aFirm;,
					productionVolume, t-4) +
					val(Firms.&aFirm;,
					productionVolume, t-5))
					/6
				</y>
			</series>

			<series
				label="Effective"
				color="orange"
			>
				<x>t</x>
				<y>val(Firms.&aFirm;,
					productionVolume, t)
				</y>
			</series>

			<series
				label="Target"
				color="green"
			>
				<x>t</x>
				<y>val(Firms.&aFirm;,
					productionTarget, t)
				</y>
			</series>

			<series
				label="Max"
				color="blue"
			>
				<x>t</x>
				<y>val(Firms.&aFirm;,
					productionMax, t)
				</y>
			</series>

			<yAxis label="Volume" />

		</chart>



		<chart title="Inventories">
			<if>&refresh;</if>
			<series
				label="Effective"
				color="red"
			>
				<x>t</x>
				<y>val(Firms.&aFirm;,
					inventoriesVolume, t)
				</y>
			</series>
			<series
				label="Normal"
				color="green"
			>
				<x>t</x>
				<y>val(Firms.&aFirm;,
					inventoriesNormalVolume, t)
				</y>
			</series>
			<series
				label="Desequilibria"
				color="orange"
			>
				<x>t</x>
				<y>val(Firms.&aFirm;,
					inventoryDesequilibria, t)
				</y>
			</series>
			<yAxis label="Volume" />

		</chart>

		<chart title="Capacity Utilization">
			<if>&refresh;</if>
			<series
				label="Effective"
				color="red"
			>
				<x>t</x>
				<y>val(Firms.&aFirm;,
					workforce, t) / val(Firms.&aFirm;,
					capacity, t)
				</y>
			</series>
			<series
				label="Target"
				color="blue"
			>
				<x>t</x>
				<y>val(Firms.&aFirm;,
					utilizationTarget, t)
				</y>
			</series>
			<series
				label="Normal"
				color="green"
			>
				<x>t</x>
				<y>Firms.utilization.normalRate</y>
			</series>
			<yAxis label="%" />

		</chart>

		<empty/>

		<col />

		<chart title="Workforce">

			<if>&refresh;</if>

			<series
				label="Effective"
				color="red"
			>
				<x>t</x>
				<y>val(Firms.&aFirm;,
					workforce, t)
				</y>
			</series>

			<series
				label="Target"
				color="green"
			>
				<x>t</x>
				<y>val(Firms.&aFirm;,
					workforceTarget, t)
				</y>
			</series>

			<series
				label="Max"
				color="blue"
			>
				<x>t</x>
				<y>val(Firms.&aFirm;,
					capacity, t)
				</y>
			</series>

			<yAxis label="Workers" />

		</chart>

		<chart title="Firms Debt Ratio">

			<if>&refresh;</if>

			<series label="Overdue debt" color="red">
				<x>t</x>
				<y>100 * val(Firms.&aFirm;, overdueDebt, t) / val(Firms.&aFirm;, assets, t)</y>
			</series>
			
			<series label="Debt ratio" color="blue">
				<x>t</x>
				<y>100 * val(Firms.&aFirm;, liabilities, t) / val(Firms.&aFirm;, assets, t)</y>
			</series>
			
			<yAxis
				label="%"
				min="0" />
				
		</chart>

		<chart title="Profits">

			<if>&refresh;</if>

			<series label="Gross profit">
				<x>t</x>
				<y>val(Firms.&aFirm;,
					salesValue, t) - val(Firms.&aFirm;,
					salesCosts, t)
				</y>
			</series>

			<series label="Dividends">
				<x>t</x>
				<y>val(Firms.&aFirm;,
					dividends, t)
				</y>
			</series>

			<series label="Debt service">
				<x>t</x>
				<y>val(Firms.&aFirm;,
					debtService, t)
				</y>
			</series>

			<yAxis label="Value" />

		</chart>

		<empty/>

	</panel>

	<panel title="&aWorker;">

		<html>
			The behavior of any individual agent can be monitored.
			<br />
			Here, we observes the worker "&aWorker;".
		</html>

		<empty/>
		
		<chart title="&aWorker;: employment status">
			<series
				label="Employed"
				color="green"
			>
				<x>t</x>
				<y>val(Workers.&aWorker;,
					employmentDuration, t)
				</y>
			</series>
			<series
				label="Unemployed"
				color="red"
			>
				<x>t</x>
				<y>val(Workers.&aWorker;,
					unempDuration, t)
				</y>
			</series>
			<yaxis label="Months" />
		</chart>

		<col />

		<chart title="Wage">
			<series label="&aWorker; wage">
				<x>t</x>
				<y>val(Workers.&aWorker;,
					wage, t)
				</y>
			</series>
			<series label="&aWorker; reservation wage">
				<x>t</x>
				<y>val(Workers.&aWorker;,
					reservationWage, t)
				</y>
			</series>
			<series label="Sector average wage">
				<x>t</x>
				<y>val(Workers, wage, t, sum)/val(Workers, employed, t, sum)</y>
			</series>
		</chart>

		<chart title="Job">
			<series label="Employed">
				<x>t</x>
				<y>val(Workers.&aWorker;,
					employed, t)
				</y>
			</series>
			<series label="Hiring">
				<x>t</x>
				<y>val(Workers.&aWorker;,
					hiring, t)
				</y>
			</series>
		</chart>

		<chart title="Unemployment Duration">
			<series label="&aWorker;">
				<x>t</x>
				<y>val(Workers.&aWorker;,
					unempDuration, t)
				</y>
			</series>
			<series label="Average">
				<x>t</x>
				<y>val(Workers, unempDuration, t, sum) / (val(Workers, count, t,
					sum) - val(Workers, employed, t, sum))</y>
			</series>
		</chart>

		<col />

		<html>
			Period:
			<data format="##0">t</data>
			<br />
			&aWorker;
			wage:
			<data format="##0.##">val(Workers.&aWorker;,
				wage, t)
			</data>
			<br />
			Sector average wage:
			<data format="##0.##">val(Workers, wage, t, sum)/val(Workers, count, t,
				sum)</data>
			<br />
		</html>

		<chart title="Hirings and Firings">
			<series label="Hirings">
				<x>t</x>
				<y>val(Workers, hiring, t, sum)</y>
			</series>
			<series label="Firings">
				<x>t</x>
				<y>val(Firms, firing, t, sum)</y>
			</series>
			<series label="Workforce target">
				<x>t</x>
				<y>val(Firms, workforceTarget, t, sum)</y>
			</series>
			<series label="Workforce">
				<x>t</x>
				<y>val(Firms, workforce, t, sum)</y>
			</series>
		</chart>

		<chart title="Employment Duration">
			<series label="&aWorker;">
				<x>t</x>
				<y>val(Workers.&aWorker;,
					employmentDuration, t)
				</y>
			</series>
			<series label="Average">
				<x>t</x>
				<y>val(Workers, employmentDuration, t, sum) / val(Workers, employed,
					t, sum)</y>
			</series>
		</chart>

	</panel><panel title="Reliability">

		<html title="About">
			Provides some reliability tests.
		</html>

		<chart title="Firms Balance Sheet">
			<if>&refresh;</if>
			<series label="Assets = Tangible assets + Money ?" color="red">
				<x>t</x>
				<y>isEqual((val(Firms, tangibleAssets, t, sum)+val(Firms, money, t,
					sum)),val(Firms, assets, t, sum))</y>
			</series>
			<yAxis label="0=false, 1=true" />
		</chart>

		<chart title="Firms Wage Bill = Workers Wages ?">
			<if>&refresh;</if>
			<series label="Test" color="red">
				<x>t</x>
				<y>isEqual(val(Firms, wageBill, t, sum),val(Workers, wage, t, sum))</y>
			</series>
			<yAxis label="0=false, 1=true" />
		</chart>
		
		<chart title="Firms Wage Bill = Workers Wages ?">
			<series label="True" color="green" shapesVisible="true" linesVisible="false">
				<if>isEqual(val(Firms, wageBill, t, sum),val(Workers, wage, t, sum))</if>
				<x>t</x>
				<y>1</y>
			</series>
			<series label="False" color="red" shapesVisible="true" linesVisible="false">
				<if>isEqual(isEqual(val(Firms, wageBill, t, sum),val(Workers, wage, t, sum)),0)</if>
				<x>t</x>
				<y>0</y>
			</series>
			<yAxis label="0=false, 1=true" />
		</chart>

		<col />

		<empty />

		<col />

		<empty />

	</panel>

	<panel title="Performances">

		<html>
			<center>
				<h2>Profiling and debugging</h2>
			</center>
		</html>

		<chart title="Simulation Speed">
			<series label="Average">
				<x>t</x>
				<y>1000*t/duration</y>
			</series>
			<series label="Instantaneous">
				<x>t</x>
				<y>1000*speed</y>
			</series>
			<yAxis label="Periods by second" />
		</chart>

		<chart title="Memory usage">
			<series label="Total Memory">
				<x>t</x>
				<y>totalMemory/1000000</y>
			</series>
			<series label="Used">
				<x>t</x>
				<y>(totalMemory-freeMemory)/1000000</y>
			</series>
			<yAxis label="Megabytes" />
		</chart>

		<col />

		<html>
			Period:
			<data format="##0">t</data>
			<br />
			Simulation duration:
			<data format="##0">duration/1000</data>
			s
			<br />
			Instantaneous speed:
			<data format="##0.00">1000*speed</data>
			periods by second
			<br />
			Average speed:
			<data format="##0.00">1000*t/duration</data>
			periods by second
			<br />
			Total memory:
			<data format="##0.00">totalMemory/1000000</data>
			MB
			<br />
			Free memory:
			<data format="##0.00">freeMemory/1000000</data>
			MB
			<br />
		</html>

		<empty />

		<empty />

		<col />

		<chart title="Phase performances">

			<series label="Firms.planProduction">
				<x>t</x>
				<y>val(Firms, phase.planProduction.runtime)/t</y>
			</series>
			<series label="Workers.jobSearch">
				<x>t</x>
				<y>val(Workers, phase.jobSearch.runtime)/t</y>
			</series>
			<series label="Workers.consumption">
				<x>t</x>
				<y>val(Workers, phase.consumption.runtime)/t</y>
			</series>
			<series label="Shareholders.consumption">
				<x>t</x>
				<y>val(Shareholders, phase.consumption.runtime)/t</y>
			</series>
			<series label="Firms.payWages">
				<x>t</x>
				<y>val(Firms, phase.payWages.runtime)/t</y>
			</series>
			<series label="Banks.debtRecovery">
				<x>t</x>
				<y>val(Banks, phase.debtRecovery.runtime)/t</y>
			</series>
			<series label="Banks.payDividends">
				<x>t</x>
				<y>val(Banks, phase.payDividends.runtime)/t</y>
			</series>
			<series label="Firms.payDividends">
				<x>t</x>
				<y>val(Firms, phase.payDividends.runtime)/t</y>
			</series>

		</chart>

		<empty />
		<empty />

	</panel>

	<panel title="About">
		<html src="about.xml" />
	</panel>
</gui>