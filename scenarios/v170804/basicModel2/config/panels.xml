<?xml version="1.0" encoding="UTF-8"?>

<!-- 9 août 2017 -->

<!DOCTYPE gui [
	<!ENTITY refresh "isEqual(t&#37;1, 0)"> 
	<!ENTITY laps "t"> 
	<!ENTITY aFirm "Firm_0"> 
	<!ENTITY aWorker "Worker_0">
]>

<gui className="jamel.v170804.gui.BasicGui">

	<panel title="Main">

		<chart title="Costs and Prices">
			<if>&refresh;
			</if>
			<series
				label="Unit Cost"
				color="red"
			>
				<x>t</x>
				<y>
					val(Firms, supplyCost, &laps;,
					sum) / val(Firms, supplyVolume,
					&laps;,
					sum)
				</y>
			</series>
			<series
				label="Unit Price"
				color="blue"
			>
				<x>t</x>
				<y>
					val(Firms, supplyValue, &laps;,
					sum) / val(Firms, supplyVolume,
					&laps;,
					sum)
				</y>
			</series>
			<yAxis label="Value" />

		</chart>
		<chart title="Deposits">
			<if>&refresh;
			</if>
			<series
				label="Firms"
				color="red"
			>
				<x>t</x>
				<y>val(Firms, money, t, sum)</y>
			</series>
			<series
				label="Workers"
				color="blue"
			>
				<x>t</x>
				<y>val(Workers, money, t, sum)</y>
			</series>
			<series
				label="Shareholders"
				color="green"
			>
				<x>t</x>
				<y>val(Shareholders, money, t, sum)</y>
			</series>
			<yAxis label="Value" />
		</chart>
		<empty />
		<col />

		<chart title="Firms Balance Sheet">
			<if>&refresh;
			</if>
			<series
				label="Tangible assets"
				color="red"
			>
				<x>t</x>
				<y>val(Firms, tangibleAssets, t, sum)</y>
			</series>
			<series
				label="Money"
				color="blue"
			>
				<x>t</x>
				<y>val(Firms, money, t, sum)</y>
			</series>
			<series
				label="Liabilities"
				color="green"
			>
				<x>t</x>
				<y>val(Firms, liabilities, t, sum)</y>
			</series>
			<yAxis label="Value" />
		</chart>

		<chart title="Firms Debt Ratio">
			<if>&refresh;
			</if>
			<series
				label="Debt ratio"
				color="red"
			>
				<x>t</x>
				<y>val(Firms, liabilities, t, sum) / val(Firms, assets, t, sum)</y>
			</series>
			<yAxis
				label="%"
				min="0"
				max="1" />
		</chart>

		<chart title="Goods Market 1">

			<if>&refresh;
			</if>

			<series
				label="Supply"
				color="red"
			>
				<x>t</x>
				<y>val(Firms,
					supplyValue, &laps;,
					sum)
				</y>
			</series>

			<series
				label="Demand"
				color="blue"
			>
				<x>t</x>
				<y>
					val(Workers, consumptionBudget, &laps;,
					sum)
					+ val(Shareholders,
					consumptionBudget, &laps;,
					sum)
				</y>
			</series>

			<yAxis label="Value" />

		</chart>

		<col />

		<chart title="Banks Balance Sheet">

			<if>&refresh;
			</if>

			<series
				label="Assets"
				color="blue"
			>
				<x>t</x>
				<y>val(Banks, assets, t, sum)</y>
			</series>

			<series
				label="liabilities"
				color="red"
			>
				<x>t</x>
				<y>val(Banks, liabilities, t, sum)</y>
			</series>

			<yAxis label="Value" />

		</chart>

		<chart title="Goods Market 2">

			<if>&refresh;
			</if>

			<series
				label="Production"
				color="red"
			>
				<x>t</x>
				<y>val(Firms,
					productionVolume, &laps;,
					sum)
				</y>
			</series>

			<series
				label="Sales"
				color="blue"
			>
				<x>t</x>
				<y>val(Firms,
					salesVolume, &laps;,
					sum)
				</y>
			</series>

			<series
				label="Consumption"
				color="green"
			>
				<x>t</x>
				<y>val(Workers,
					consumptionVolume, &laps;,
					sum)
					+ val(Shareholders,
					consumptionVolume, &laps;,
					sum)
				</y>
			</series>

			<yAxis label="Volume" />

		</chart>

		<chart title="Goods Market 3">

			<if>&refresh;
			</if>

			<series
				label="Supply"
				color="red"
			>
				<x>t</x>
				<y>val(Firms,
					supplyVolume, &laps;,
					sum)
				</y>
			</series>

			<series
				label="demand"
				color="blue"
			>
				<x>t</x>
				<y>
					(val(Workers, consumptionBudget, &laps;,
					sum) +
					val(Shareholders, consumptionBudget, &laps;,
					sum)) *
					val(Firms,supplyVolume,&laps;,
					sum) /
					val(Firms,supplyValue,&laps;,
					sum)
				</y>

			</series>

			<yAxis label="Volume" />

		</chart>

	</panel>

	<panel title="Labor Market">
		<chart title="Employment">
			<series
				label="#Workers"
				color="green"
			>
				<x>t</x>
				<y>val(Workers, count, t, sum)</y>
				<color>green</color>
			</series>
			<series
				label="#Employed"
				color="blue"
			>
				<x>t</x>
				<y>val(Workers, employed, t, sum)</y>
			</series>
			<xAxis label="Time" />
		</chart>
		<chart title="Job offers">
			<series color="red">
				<x>t</x>
				<y>val(Firms, jobOffers, t, sum)</y>
			</series>
			<xAxis label="Time" />
		</chart>

		<empty />
		<col />
		<empty />

		<col />
		<empty />

	</panel>
	
	<panel title="Workers">
	
		<html title="Presentation">
			Les "Workers" sont une des deux catégories de ménages
			du modèle.
		</html>

		<chart title="Deposits">
			<if>&refresh;
			</if>
			<series
				label="Workers"
				color="green"
			>
				<x>t</x>
				<y>val(Workers, money, t, sum)</y>
			</series>
			<yAxis label="Value" />
		</chart>
		<empty />
		<col />

		<chart title="Consumption">
			<if>&refresh;
			</if>
			<series
				label="Budget"
				color="red"
			>
				<x>t</x>
				<y>val(Workers,
					consumptionBudget, &laps;,
					sum)
				</y>
			</series>

			<series
				label="Consumption"
				color="blue"
			>
				<x>t</x>
				<y>val(Workers,
					consumptionValue, &laps;,
					sum)
				</y>
			</series>

			<yAxis label="Value" />

		</chart>

		<empty />
		<empty />
		<col />
		<empty />

	</panel>

	<panel title="Shareholders">
		<html title="Presentation">
			Les "Shareholders" sont une des deux catégories de
			ménages du modèle.
		</html>

		<chart title="Deposits">
			<if>&refresh;
			</if>
			<series
				label="Shareholders"
				color="green"
			>
				<x>t</x>
				<y>val(Shareholders,
					money, &laps;,
					sum)
				</y>
			</series>
			<yAxis label="Value" />
		</chart>
		<empty />
		<col />

		<chart title="Consumption">
			<if>&refresh;
			</if>

			<series
				label="Budget"
				color="red"
			>
				<x>t</x>
				<y>val(Shareholders,
					consumptionBudget, &laps;,
					sum)
				</y>
			</series>

			<series
				label="Consumption"
				color="blue"
			>
				<x>t</x>
				<y>val(Shareholders,
					consumptionValue, &laps;,
					sum)
				</y>
			</series>

			<yAxis label="Value" />

		</chart>
		
		<empty />

		<chart title="Supply and demand">
			<series
				label="Demand"
				color="blue"
			>
				<x>t</x>
				<y>val(Shareholders,
					consumptionBudget, &laps;,
					sum)
				</y>
			</series>
			<series
				label="Consumption"
				color="green"
			>
				<x>t</x>
				<y>val(Shareholders, consumptionValue, &laps;, sum)
				</y>
			</series>
			<yAxis label="Value" />
		</chart>

		<col />

		<empty />

	</panel>

	<panel title="Firms">
		<html title="Presentation">
			Les "Firms" produisent un bien unique, qui est un
			bien de consommation.
		</html>

		<chart title="Deposits">
			<if>&refresh;
			</if>
			<series
				label="Firms"
				color="green"
			>
				<x>t</x>
				<y>val(Firms, money, t, sum)</y>
			</series>
			<yAxis label="Value" />
		</chart>

		<chart title="Inventories">
			<if>&refresh;
			</if>
			<series
				label="Firms"
				color="green"
			>
				<x>t</x>
				<y>val(Firms, inventoriesVolume, t, sum)</y>
			</series>
			<yAxis label="Volume" />

		</chart>

		<col />

		<chart title="Markups">
			<if>&refresh;
			</if>
			<series
				label="Average Markup"
				color="red"
			>
				<x>t</x>
				<y>val(Firms, markup, t, sum)/val(Firms, count, t, sum)</y>
			</series>

			<yAxis label="%" />

		</chart>

		<chart title="Delta Markup">
			<if>&refresh;
			</if>
			<series
				label="Average Delta Markup"
				color="red"
			>
				<x>t</x>
				<y>val(Firms, deltaMarkup, t, sum)/val(Firms, count, t, sum)</y>
			</series>

			<yAxis label="%" />

		</chart>

		<chart title="Inventories">
			<if>&refresh;
			</if>
			<series
				label="Effective"
				color="red"
			>
				<x>t</x>
				<y>val(Firms, inventoriesVolume, t, sum) / val(Firms, count, t, sum)
				</y>
			</series>
			<series
				label="Normal"
				color="green"
			>
				<x>t</x>
				<y>val(Firms, inventoriesNormalVolume, t, sum) / val(Firms, count,
					t, sum)
				</y>
			</series>
			<yAxis label="Volume" />

		</chart>

		<col />
		<chart title="Capacity Utilization">
			<if>&refresh;
			</if>
			<series
				label="Effective"
				color="red"
			>
				<x>t</x>
				<y>val(Firms, workforce, t, sum) / val(Firms, capacity, t, sum)
				</y>
			</series>
			<series
				label="Normal"
				color="green"
			>
				<x>t</x>
				<y>Firms.utilization.normalRate</y>
			</series>
			<yAxis label="%" />

		</chart>

		<html>
			Period:
			<data format="##0">t</data>
			<br />
			Workforce:
			<data format="##0">val(Firms, workforce, t, sum)</data>
			<br />
			Capacity:
			<data format="##0">val(Firms, capacity, t, sum)</data>
			<br />
			Normal rate of utilization:
			<data format="0.##">Firms.utilization.normalRate</data>
			<br />
		</html>

		<chart title="Price changes">
			<if>&refresh;
			</if>
			<series
				label="Price updates / #Firms"
				color="red"
			>
				<x>t</x>
				<y>val(Firms,
					changePrice, &laps;,
					sum) / val(Firms, count, &laps;,
					sum)
				</y>
			</series>
			<yAxis label="%" />

		</chart>

	</panel>

	<panel title="&aFirm;">

		<html>
			The behavior of any individual agent can be monitored (here, the firm
			"&aFirm;").
		</html>

		<chart title="Price">
			<series label="&aFirm;">
				<x>t</x>
				<y>val(Firms.&aFirm;,
					price, t)
				</y>
			</series>
			<series label="Sector Average">
				<x>t</x>
				<y>val(Firms, supplyValue, t, sum)/val(Firms, supplyVolume, t, sum)</y>
			</series>
		</chart>

		<chart title="Markup">
			<if>&refresh;
			</if>

			<series label="&aFirm;">
				<x>t</x>
				<y>val(Firms.&aFirm;,
					markup, t)
				</y>
			</series>

			<series label="Sector Average (ex ante)">
				<x>t</x>
				<y>val(Firms, markup, t, sum)/val(Firms, count, t, sum)</y>
			</series>

			<series label="Sector Average (ex post)">
				<x>t</x>
				<y>val(Firms, salesValue, t, sum)/val(Firms, salesCosts, t, sum)</y>
			</series>

			<yAxis label="%" />

		</chart>

		<col />

		<chart title="Wage">
			<series label="&aFirm;">
				<x>t</x>
				<y>val(Firms.&aFirm;, wage, t)</y>
			</series>
			<series label="Sector Average">
				<x>t</x>
				<y>val(Workers, wage, t, sum) / val(Workers, employed, t, sum)</y>
			</series>
		</chart>
		
		<chart title="Vacancies">
			<series label="Vacancy rate">
				<x>t</x>
				<y>val(Firms.&aFirm;, vacancies, t) / val(Firms.&aFirm;, capacity, t)</y>
			</series>
			<series label="Relative wage">
				<x>t</x>
				<y>val(Workers, employed, t, sum) * val(Firms.&aFirm;, wage, t) / val(Workers, wage, t, sum) - 0.8</y>
			</series>
		</chart>
		
		<chart title="Vacancies 2">
			<series label="Vacancy rate">
				<x>t</x>
				<y>val(Firms.&aFirm;, vacancies, t) / val(Firms.&aFirm;, jobOffers, t)</y>
			</series>
			<series label="Relative wage">
				<x>t</x>
				<y>val(Workers, employed, t, sum) * val(Firms.&aFirm;, wage, t) / val(Workers, wage, t, sum) - 0.8</y>
			</series>
		</chart>
		
		<col/>
		
		<html>
			Period:<data format="##0">t</data><br />
			&aFirm; price: <data format="##0.##">val(Firms.firm_0, price, t)</data><br />
			Sector average price: <data format="##0.##">val(Firms, price, t, sum)/val(Firms, count, t, sum)</data><br />
			Sector average (ex post) markup: <data format="##0.##">val(Firms, salesValue, t, sum)/val(Firms, salesCosts, t, sum)</data><br />
			<data format="##0.##">val(Workers, wage, t, sum)/val(Workers, count, t, sum)</data><br />
			<data format="##0.##">val(Firms.&aFirm;, wage, t)</data><br />
		</html>
		
		<empty />
		
		<empty/>
	
	</panel>

	<panel title="&aWorker;">

		<html>
			The behavior of any individual agent can be monitored.<br />
			Here, we observes the worker "&aWorker;".
		</html>
		
		<chart title="Etat des contrats à l'ouverture de la période">
			<series label="isValid">
				<x>t</x>
				<y>val(Workers, isValid, t, sum)</y>
			</series>
			<series label="isNull">
				<x>t</x>
				<y>val(Workers, isNull, t, sum)</y>
			</series>
			<series label="isInvalid">
				<x>t</x>
				<y>val(Workers, isInvalid, t, sum)</y>
			</series>
			<series
				label="sinceStart" 
				color="orange"
			>
				<x>t</x>
				<y>val(Workers, sinceStart, t, sum)</y>
			</series>
		</chart>
		
		<chart title="&aWorker;: employment status">
			<series label="Employed" color="green">
				<x>t</x>
				<y>val(Workers.&aWorker;, employmentDuration, t)</y>
			</series>
			<series label="Unemployed" color="red">
				<x>t</x>
				<y>val(Workers.&aWorker;, unempDuration, t)</y>
			</series>
			<yaxis label="Months"/>
		</chart>
		
		<col />

		<chart title="Wage">
			<series label="&aWorker; wage">
				<x>t</x>
				<y>val(Workers.&aWorker;, wage, t)</y>
			</series>
			<series label="&aWorker; reservation wage">
				<x>t</x>
				<y>val(Workers.&aWorker;, reservationWage, t)</y>
			</series>
			<series label="Sector average wage">
				<x>t</x>
				<y>val(Workers, wage, t, sum)/val(Workers, employed, t, sum)</y>
			</series>
		</chart>

		<chart title="Job">
			<series label="Employed">
				<x>t</x>
				<y>val(Workers.&aWorker;, employed, t)</y>
			</series>
			<series label="Hiring">
				<x>t</x>
				<y>val(Workers.&aWorker;, hiring, t)</y>
			</series>
		</chart>		
		
		<chart title="Unemployment Duration">
			<series label="&aWorker;">
				<x>t</x>
				<y>val(Workers.&aWorker;, unempDuration, t)</y>
			</series>
			<series label="Average">
				<x>t</x>
				<y>val(Workers, unempDuration, t, sum) / (val(Workers, count, t, sum) - val(Workers, employed, t, sum))</y>
			</series>
		</chart>
		
		<col />
		
		<html>
			Period:<data format="##0">t</data><br />
			&aWorker; wage: <data format="##0.##">val(Workers.&aWorker;, wage, t)</data><br />
			Sector average wage: <data format="##0.##">val(Workers, wage, t, sum)/val(Workers, count, t, sum)</data><br />
		</html>
		
		<chart title="Hirings and Firings">
			<series label="Hirings">
				<x>t</x>
				<y>val(Workers, hiring, t, sum)</y>
			</series>
			<series label="Firings">
				<x>t</x>
				<y>val(Firms, firing, t, sum)</y>
			</series>
			<series label="Workforce target">
				<x>t</x>
				<y>val(Firms, workforceTarget, t, sum)</y>
			</series>
			<series label="Workforce">
				<x>t</x>
				<y>val(Firms, workforce, t, sum)</y>
			</series>
		</chart>
		
		<chart title="Employment Duration">
			<series label="&aWorker;">
				<x>t</x>
				<y>val(Workers.&aWorker;, employmentDuration, t)</y>
			</series>
			<series label="Average">
				<x>t</x>
				<y>val(Workers, employmentDuration, t, sum) / val(Workers, employed, t, sum)</y>
			</series>
		</chart>
		
	</panel>
	
	<panel title="Performances">
		
		<html>
			<center>
				<h2>Profiling and debugging</h2>
			</center>
		</html>
		
		<chart title="Simulation Speed">
			<series label="Average">
				<x>t</x>
				<y>1000*t/duration</y>
			</series>
			<series label="Instantaneous">
				<x>t</x>
				<y>1000*speed</y>
			</series>
			<yAxis label="Periods by second" />
		</chart>

		<chart title="Memory usage">
			<series label="Total Memory">
				<x>t</x>
				<y>totalMemory/1000000</y>
			</series>
			<series label="Used">
				<x>t</x>
				<y>(totalMemory-freeMemory)/1000000</y>
			</series>
			<yAxis label="Megabytes" />
		</chart>
		
		<col />

		<html>
			Period: <data format="##0">t</data><br />
			Simulation duration: <data format="##0">duration/1000</data> s<br />
			Instantaneous speed: <data format="##0.00">1000*speed</data> periods by second<br />
			Average speed: <data format="##0.00">1000*t/duration</data> periods by second <br />
			Total memory: <data format="##0.00">totalMemory/1000000</data> MB<br />
			Free memory: <data format="##0.00">freeMemory/1000000</data> MB<br />
		</html>
		
		<empty />
		
		<empty />
		
		<col/>
		
		<chart title="Phase performances">
			
			<series label="Firms.planProduction">
				<x>t</x>
				<y>val(Firms, phase.planProduction.runtime)/t</y>
			</series>
			<series label="Workers.jobSearch">
				<x>t</x>
				<y>val(Workers, phase.jobSearch.runtime)/t</y>
			</series>
			<series label="Workers.consumption">
				<x>t</x>
				<y>val(Workers, phase.consumption.runtime)/t</y>
			</series>
			<series label="Shareholders.consumption">
				<x>t</x>
				<y>val(Shareholders, phase.consumption.runtime)/t</y>
			</series>
			<series label="Firms.payWages">
				<x>t</x>
				<y>val(Firms, phase.payWages.runtime)/t</y>
			</series>
			<series label="Banks.debtRecovery">
				<x>t</x>
				<y>val(Banks, phase.debtRecovery.runtime)/t</y>
			</series>
			<series label="Banks.payDividends">
				<x>t</x>
				<y>val(Banks, phase.payDividends.runtime)/t</y>
			</series>
			<series label="Firms.payDividends">
				<x>t</x>
				<y>val(Firms, phase.payDividends.runtime)/t</y>
			</series>
			
		</chart>
		
		<empty/>
		<empty/>

	</panel>

	<panel title="About">
		<html src="about.xml" />
	</panel>
</gui>